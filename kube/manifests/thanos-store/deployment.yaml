apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: thanos-store
  labels:
    app: thanos-store
    thanos-peer: "true"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: thanos-store
        thanos-peer: "true"
    spec:
      containers:
        # To use your own thanos image you need to do `eval $(minikube docker-env) && make docker` and place thanos/thanos:latest here.
        # TODO(bplotka): With vm-driver=none, even that is uses same docker, images are not recognized. Investigate.
      - image: bplotka/thanos:latest
        imagePullPolicy: Always
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /creds/gcs-credentials.json
        args: [
          "store",
          "--log.level=debug",
          "--debug.name=store",
          "--api-address=0.0.0.0:19090", # This address will be properly deduced and propagated via cluster.PeerState.
          "--metrics-address=0.0.0.0:19190",
          "--tsdb.path=/data",
          "--cluster.address=0.0.0.0:19390",
          "--cluster.peers=thanos.default.svc.cluster.local:19390",
          "--gcs.bucket=thanos-test"
        ]
        name: thanos
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - mountPath: /creds/
          name: gcs-credentials
          readOnly: true
        - name: tsdb-data
          mountPath: /data
      volumes:
      - name: gcs-credentials
        secret:
          defaultMode: 420
          # gcs-credentials secret with single file gcs-credentials.json is required.
          secretName: gcs-credentials
      - name: tsdb-data
        emptyDir: {}
      terminationGracePeriodSeconds: 300